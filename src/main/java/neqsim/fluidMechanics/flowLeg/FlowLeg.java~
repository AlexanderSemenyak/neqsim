/*
 * FlowLeg.java
 *
 * Created on 8. desember 2000, 19:30
 */

package fluidMechanics.flowLeg;

import thermo.system.*;
import fluidMechanics.flowNode.*;
import fluidMechanics.geometryDefinitions.*;

/**
 *
 * @author  Even Solbraa
 * @version
 */
public abstract class FlowLeg extends java.lang.Object implements FlowLegInterface, java.io.Serializable{
    
    protected FlowNodeInterface[] flowNode;
    protected int numberOfNodes=0;
    protected double startLongitudionalCoordinate, endLongitudionalCoordinate;
    protected double startHeightCoordinate, endHeightCoordinate;
    protected double startTemperature, endTemperature;
    protected SystemInterface thermoSystem;
    protected GeometryDefinitionInterface equipmentGeometry;
    protected double heightChangePerNode=0, longitudionalChangePerNode=0, temperatureChangePerNode=0;
    protected FlowNodeSelector nodeSelector = new FlowNodeSelector();
    
    
    /** Creates new FlowLeg */
    public FlowLeg() {
        flowNode = new FlowNodeInterface[this.getNumberOfNodes()];
    }
    
    public void createFlowNodes(){
        flowNode[0].setDistanceToCenterOfNode(this.startLongitudionalCoordinate+0.5*longitudionalChangePerNode);
        flowNode[0].setLengthOfNode(longitudionalChangePerNode);
        flowNode[0].setVerticalPositionOfNode(startHeightCoordinate+0.5*heightChangePerNode);
        flowNode[0].getGeometry().setOuterTemperature(startTemperature+0.5*temperatureChangePerNode;
        flowNode[0].init();
        
        for(int i = 0;i<getNumberOfNodes()-1;i++){
            flowNode[i+1] = flowNode[i].getNextNode();
            flowNode[i+1].setDistanceToCenterOfNode(flowNode[0].getDistanceToCenterOfNode()+(i+1)*longitudionalChangePerNode);
            flowNode[i+1].setVerticalPositionOfNode(flowNode[0].getVerticalPositionOfNode()+(i+1)*heightChangePerNode);
            flowNode[i+1].setLengthOfNode(longitudionalChangePerNode);
            flowNode[i].getGeometry().setOuterTemperature(startTemperature+(i)*temperatureChangePerNode);
            flowNode[i+1].init();
        }
    }
    
    public void setFlowNodeTypes(){
        
        nodeSelector.getFlowNodeType(flowNode);
        
        for(int i = 0;i<getNumberOfNodes();i++){
            flowNode[i].setDistanceToCenterOfNode(flowNode[0].getDistanceToCenterOfNode()+(i)*longitudionalChangePerNode);
            flowNode[i].setLengthOfNode(longitudionalChangePerNode);
            flowNode[i].setVerticalPositionOfNode(flowNode[0].getVerticalPositionOfNode()+(i)*heightChangePerNode);
            flowNode[i].getGeometry().setOuterTemperature(startTemperature+(i)*temperatureChangePerNode);
            flowNode[i].init();
        }
    }
    
    public void setFlowPattern(String flowPattern){
        nodeSelector.setFlowPattern(flowNode, flowPattern);
        flowNode[0].init();
        flowNode[0].setDistanceToCenterOfNode(this.startLongitudionalCoordinate+0.5*longitudionalChangePerNode);
        flowNode[0].setLengthOfNode(longitudionalChangePerNode);
        flowNode[0].setVerticalPositionOfNode(startHeightCoordinate+0.5*heightChangePerNode);
        
        for(int i = 0;i<getNumberOfNodes()-1;i++){
            flowNode[i+1] = flowNode[i].getNextNode();
            flowNode[i+1].setDistanceToCenterOfNode(flowNode[0].getDistanceToCenterOfNode()+(i+1)*longitudionalChangePerNode);
            flowNode[i+1].setVerticalPositionOfNode(flowNode[0].getVerticalPositionOfNode()+(i+1)*heightChangePerNode);
            flowNode[i+1].setLengthOfNode(longitudionalChangePerNode);
            flowNode[i].getGeometry().setOuterTemperature(startTemperature+(i)*temperatureChangePerNode);
            
            flowNode[i+1].init();
        }
    }
    
    public void setThermoSystem(SystemInterface thermoSystem){
        this.thermoSystem = (SystemInterface) thermoSystem.clone();
    }
    
    public void setEquipmentGeometry(GeometryDefinitionInterface equipmentGeometry){
        this.equipmentGeometry = (GeometryDefinitionInterface) equipmentGeometry.clone();
    }
    
    public void setNumberOfNodes(int numberOfNodes){
        this.numberOfNodes = numberOfNodes;
    }
    
    public int getNumberOfNodes(){
        return this.numberOfNodes;
    }
    
    
    public void setHeightCoordinates(double startHeightCoordinate, double endHeightCoordinate){
        this.startHeightCoordinate = startHeightCoordinate;
        this.endHeightCoordinate = endHeightCoordinate;
    }
    
    public void setLongitudionalCoordinates(double startLongitudionalCoordinate, double endLongitudionalCoordinate){
        this.startLongitudionalCoordinate = startLongitudionalCoordinate;
        this.endLongitudionalCoordinate = endLongitudionalCoordinate;
    }
    
    public void setOuterTemperatures(double startTemperature, double endTemperature){
        this.startTemperature = startTemperature;
        this.endTemperature = endTemperature;
    }
    
    public FlowNodeInterface[] getFlowNodes(){
        return flowNode;
    }
    
    public FlowNodeInterface getNode(int i){
        return flowNode[i];
    }
    
    
    
    
    
}

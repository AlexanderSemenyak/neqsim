/*
 * PipeLeg.java
 *
 * Created on 8. desember 2000, 19:32
 */

package fluidMechanics.flowLeg.pipeLeg;

import fluidMechanics.flowLeg.*;
import fluidMechanics.flowNode.*;
import fluidMechanics.flowNode.onePhaseNode.onePhasePipeFlowNode.*;
import fluidMechanics.flowNode.twoPhaseNode.twoPhasePipeFlowNode.*;
/**
 *
 * @author  Even Solbraa
 * @version
 */
public class PipeLeg extends FlowLeg {
    
    // FlowNodeInterface[] node;
    
    /** Creates new PipeLeg */
    public PipeLeg() {
        super();
    }
    
    
    public void createFlowNodes(FlowNodeInterface initNode){
        heightChangePerNode = (this.endHeightCoordinate-this.startHeightCoordinate)/this.getNumberOfNodes();
        longitudionalChangePerNode = (this.endLongitudionalCoordinate-this.startLongitudionalCoordinate)/(this.getNumberOfNodes()*1.0);
        temperatureChangePerNode = (this.endTemperature-this.startTemperature)/(this.getNumberOfNodes()*1.0);
        
        flowNode = new FlowNodeInterface[this.getNumberOfNodes()];
        
        this.flowNode[0] = initNode.getNextNode();
        this.equipmentGeometry.setNodeLength(longitudionalChangePerNode);
        this.equipmentGeometry.init();
        flowNode[0].setGeometryDefinitionInterface(this.equipmentGeometry);
        //   flowNode = new onePhasePipeFlowNode[this.getNumberOfNodes()];
        //   flowNode[0] = new onePhasePipeFlowNode(thermoSystem, this.equipmentGeometry, inletTotalNormalVolumetricFlowRate);
        //   flowNode[0] = new AnnularFlow(thermoSystem, this.equipmentGeometry, inletTotalNormalVolumetricFlowRate);
        super.createFlowNodes();
    }
    
}

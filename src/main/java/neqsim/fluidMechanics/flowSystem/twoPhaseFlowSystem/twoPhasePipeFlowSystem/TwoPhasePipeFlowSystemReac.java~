package fluidMechanics.flowSystem.twoPhaseFlowSystem.twoPhasePipeFlowSystem;

import thermo.system.*;
import thermodynamicOperations.*;
import fluidMechanics.geometryDefinitions.pipe.*;
import fluidMechanics.flowNode.twoPhaseNode.twoPhasePipeFlowNode.*;

public class TwoPhasePipeFlowSystemReac extends TwoPhasePipeFlowSystem {
    
    
    public TwoPhasePipeFlowSystemReac(){
    }
    
    
    public static void main(String[] args) {
        // Initierer et nyt rørsystem
        fluidMechanics.flowSystem.FlowSystemInterface pipe = new TwoPhasePipeFlowSystemReac();
        
        SystemInterface testSystem = new SystemFurstElectrolyteEos(295.3, 50.01325);
        ThermodynamicOperations testOps = new ThermodynamicOperations(testSystem);
        testSystem.addComponent("methane", 50.11152187, "Nlitre/min", 0);
        testSystem.addComponent("CO2", 50.11152181 , "Nlitre/min", 0);
        testSystem.addComponent("water", 0.5662204876 , "kg/min", 1);
        testSystem.addComponent("MDEA", 0.5662204876, "kg/min", 1);
        
        testSystem.chemicalReactionInit();
        testSystem.createDatabase(true);
        testSystem.setMixingRule(4);
        testSystem.setPhysicalPropertyModel(3);
        //testOps.TPflash();
        //testSystem.display();
      
        //testSystem.setNumericDerivatives(true);
        testSystem.initPhysicalProperties();
        
        pipe.setInletThermoSystem(testSystem);                           // setter termodyanmikken for rørsystemet
        pipe.setNumberOfLegs(3);                                        // deler inn røret i et gitt antall legger
        pipe.setNumberOfNodesInLeg(10);                                 // setter antall nodepunkter (beregningspunkter/grid) pr. leg
         
        double[] height = {0,0,0,0,0,0};
        double[] length = {0.0, 0.03, 0.07, 0.13, 2.5, 3.7};
        double[] outerTemperature = {278.0, 278.0, 278.0, 278.0, 278.0, 278.0, 278.0, 275.0, 275.0, 275.0, 275.0};
        
        pipe.setLegHeights(height);                                     // setter inn høyde for hver leg-ende
        pipe.setLegPositions(length);                                  // setter avstand til hver leg-ende
        pipe.setLegOuterTemperatures(outerTemperature);
        
        fluidMechanics.geometryDefinitions.GeometryDefinitionInterface [] pipeGemometry = new fluidMechanics.geometryDefinitions.pipe.PipeData[5];    // Deffinerer geometrien for røret
        double[] pipeDiameter = {1.025, 1.025, 1.025, 1.025, 1.025};
        for(int i=0;i<pipeDiameter.length;i++) pipeGemometry[i] = new fluidMechanics.geometryDefinitions.pipe.PipeData(pipeDiameter[i]);
        pipe.setEquipmentGeometry(pipeGemometry);                      // setter inn rørgeometrien for hver leg
        // utfører bergninger
        pipe.createSystem();
        pipe.setEquilibriumMassTransfer(false);
        pipe.setEquilibriumHeatTransfer(true);
        pipe.init();
        
        pipe.solveSteadyState(2);
        // pipe.calcFluxes();
        //pipe.print();
        pipe.getDisplay().createNetCdfFile("c:/temp5.nc");
        // pipe.displayResult();
        // testOps.TPflash();
        // testOps.displayResult();
    }
}
package fluidMechanics.geometryDefinitions.reactor;
import fluidMechanics.geometryDefinitions.*;
import fluidMechanics.geometryDefinitions.internalGeometry.packings.*;

public class ReactorData extends GeometryDefinition implements thermo.ThermodynamicConstantsInterface{
    
    
    
    public ReactorData() {
    }
    
    public ReactorData(double diameter) {
        super(diameter);
    }
    
    public ReactorData(double diameter, double roughness) {
        super(diameter, roughness);
        packing = new fluidMechanics.geometryDefinitions.internalGeometry.packings.PallRingPacking();
    }
    
    public ReactorData(double diameter, int packingType) {
        super(diameter);
        setPackingType(packingType);
    }
    
    public void setPackingType(int i){
        // if(i!=100){
        packing = new fluidMechanics.geometryDefinitions.internalGeometry.packings.PallRingPacking();
        //  }
    }
    
    public void setPackingType(String name){
        if(name.equals("pallring")){
            packing = new fluidMechanics.geometryDefinitions.internalGeometry.packings.PallRingPacking("pallring");
        }
        else if(name.equals("rashigring")){
            packing = new fluidMechanics.geometryDefinitions.internalGeometry.packings.PallRingPacking("rashigring");
        }
        else{
            System.out.println("pakcing "+ name + " not defined in database - using pallrings");
             packing = new fluidMechanics.geometryDefinitions.internalGeometry.packings.PallRingPacking("pallring");
        }
    }
    
        public void setPackingType(String name, String material, int size){
        if(name.equals("pallring")){
            packing = new fluidMechanics.geometryDefinitions.internalGeometry.packings.PallRingPacking("pallring",material, size);
        }
        else if(name.equals("rashigring")){
            packing = new fluidMechanics.geometryDefinitions.internalGeometry.packings.PallRingPacking("rashigring", material, size);
        }
        else{
            System.out.println("pakcing "+ name + " not defined in database - using pallrings");
             packing = new fluidMechanics.geometryDefinitions.internalGeometry.packings.PallRingPacking("pallring",  material, size);
        }
    }
    
    
    public void init(){
        super.init();
    }
    
    public Object clone(){
        ReactorData clonedPipe = null;
        try{
            clonedPipe = (ReactorData) super.clone();
        }
        catch(Exception e) {
            e.printStackTrace(System.err);
        }
        
        return clonedPipe;
    }
    
}
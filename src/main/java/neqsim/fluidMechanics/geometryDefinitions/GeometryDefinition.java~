/*
 * GeometryDefinition.java
 *
 * Created on 10. desember 2000, 18:47
 */

package fluidMechanics.geometryDefinitions;

import fluidMechanics.geometryDefinitions.internalGeometry.packings.*;
/**
 *
 * @author  Even Solbraa
 * @version
 */
public abstract class GeometryDefinition extends Object implements GeometryDefinitionInterface, Cloneable,  java.io.Serializable,thermo.ThermodynamicConstantsInterface{
    
    double outerTemperature = 276.5;
    protected PackingInterface packing = null;
    /** Creates new GeometryDefinition */
    
    public double  diameter=0, radius=0, innerSurfaceRoughness=0.000005, nodeLength=0, area = 0, relativeRoughnes=0;
    public double[] layerConductivity,layerThickness;
    
    
    
    public GeometryDefinition() {
    }
    
    public GeometryDefinition(double diameter) {
        this.diameter = diameter;
        this.radius = diameter/2.0;
        this.nodeLength = nodeLength;
        this.area = pi * Math.pow(radius,2);
    }
    
    public GeometryDefinition(double diameter, double roughness) {
        this(diameter);
        this.relativeRoughnes = roughness/diameter;
    }
    
    
    public Object clone(){
        GeometryDefinitionInterface clonedGeometry = null;
        try{
            clonedGeometry = (GeometryDefinition) super.clone();
        }
        catch(Exception e) {
            e.printStackTrace(System.err);
        }
        
        return clonedGeometry;
    }
    
    public void setNodeLength(double nodeLength){
        this.nodeLength = nodeLength;
    }
    
    public void setInnerSurfaceRoughness(double innerSurfaceRoughness){
        this.innerSurfaceRoughness = innerSurfaceRoughness;
    }
    
    public void init(){
        this.radius = diameter/2.0;
        this.area = pi * Math.pow(radius,2.0);
        this.relativeRoughnes = innerSurfaceRoughness/diameter;
    }
    
    public void setDiameter(double diameter){
        this.diameter = diameter;
        this.radius = diameter/2.0;
        this.area = pi * Math.pow(radius,2);
    }
    
    
    public double getWallHeatTransferCoefficient(){
        return 32.0;
    }
    
    
    public double getDiameter(){
        return diameter;
    }
    
    
    public double getArea(){
        return area;
    }
    
    public double getRadius(){
        return radius;
    }
    
    public double getInnerSurfaceRoughness(){
        return innerSurfaceRoughness;
    }
    
    public double getRelativeRoughnes(){
        return relativeRoughnes;
    }
    
    public double getRelativeRoughnes(double diameter){
        return innerSurfaceRoughness/diameter;
    }
    
    public double getCircumference(){
        return 2*pi*radius;
    }
    
    public double getNodeLength(){
        return nodeLength;
    }
    
    public double getOuterHeatTransferCoefficient(){
        return 20.0;
    }
    
    public void setOuterTemperature(double temperature){
        outerTemperature = temperature;
    }
    
    public double getOuterTemperature(){
        return outerTemperature;
    }
    
    public GeometryDefinitionInterface getGeometry(){
        return this;
    }
    
    public void setPackingType(int i){
    }
    
    public PackingInterface getPacking(){
        return packing;
    }
}

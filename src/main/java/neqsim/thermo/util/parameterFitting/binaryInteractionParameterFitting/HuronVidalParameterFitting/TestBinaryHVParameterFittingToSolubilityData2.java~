/*
 * TestAcentric.java
 *
 * Created on 23. januar 2001, 22:08
 */

package thermo.util.thermodynamicParameterFitting.binaryInteractionParameterFitting.HuronVidalParameterFitting;

import statistics.parameterFitting.nonLinearParameterFitting.*;
import statistics.parameterFitting.*;
import thermo.system.*;
import java.sql.*;
import util.database.*;
import java.util.*;
/**
 *
 * @author  Even Solbraa
 * @version
 */
public class TestBinaryHVParameterFittingToSolubilityData2 extends java.lang.Object {
    
    /** Creates new TestAcentric */
    public TestBinaryHVParameterFittingToSolubilityData2() {
    }
    
    
    public static void main(String[] args){
        
        LevenbergMarquardt optim = new LevenbergMarquardt();
        ArrayList sampleList = new ArrayList();
        
        // inserting samples from database
        NeqSimDataBase database = new NeqSimDataBase();
        ResultSet dataSet =  database.getResultSet("NeqSimDataBase",  "SELECT * FROM binarySolubilityData WHERE ComponentSolute='CO2' AND ComponentSolvent='water' AND Reference='Houghton1957' AND Temperature<=283.15 AND Pressure<5.01325");
        //  ResultSet dataSet =  database.getResultSet("NeqSimDataBase",  "SELECT * FROM activityCoefficientTable WHERE Component1='MDEA' AND Component2='water'");
        
        try{
            System.out.println("adding....");
            while(dataSet.next()){
                BinaryHVParameterFittingToSolubilityData2 function = new BinaryHVParameterFittingToSolubilityData2();
                double guess[] = {-1.01,0.1};// 100.01, 10.01, 0.01};
                function.setInitialGuess(guess);
                
                SystemInterface testSystem = new SystemSrkEos(280, 1.0);
                //    testSystem.addComponent(dataSet.getString("ComponentSolute"), 1.0);
                //    testSystem.addComponent(dataSet.getString("ComponentSolvent"), 1.0);
                double x1 = Double.parseDouble(dataSet.getString("x1"));
                double pres = Double.parseDouble(dataSet.getString("Pressure"));
                testSystem.addComponent("CO2", x1);
                testSystem.addComponent("water", (1.0-x1));
                // testSystem.addComponent("methane", 1.1);
                testSystem.setMixingRule(4);
                testSystem.setTemperature(Double.parseDouble(dataSet.getString("Temperature")));
                testSystem.setPressure(pres);
                double sample1[] = {x1};  // temperature
                double standardDeviation1[] = {0.01}; // std.dev temperature    // presure std.dev pressure
                SampleValue sample = new SampleValue(Math.log(testSystem.getPressure()), 0.01, sample1, standardDeviation1);
                sample.setFunction(function);
                sample.setThermodynamicSystem(testSystem);
                sampleList.add(sample);
            }
        }
        catch(Exception e){
            System.out.println("database error" + e);
        }
        
        SampleSet sampleSet = new SampleSet(sampleList);
        optim.setSampleSet(sampleSet);
        
        // do simulations
        optim.solve();
        //optim.runMonteCarloSimulation();
        //    optim.displayResult();
        optim.displayCurveFit();
        optim.writeToFile("c:/testFit.nc");
    }
}

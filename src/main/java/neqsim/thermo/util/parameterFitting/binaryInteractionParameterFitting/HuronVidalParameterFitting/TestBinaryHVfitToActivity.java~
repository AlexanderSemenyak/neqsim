/*
 * TestAcentric.java
 *
 * Created on 23. januar 2001, 22:08
 */

package thermo.util.parameterFitting.binaryInteractionParameterFitting.HuronVidalParameterFitting;

import java.sql.*;
import java.util.*;
import util.database.*;
import statistics.parameterFitting.nonLinearParameterFitting.*;
import statistics.parameterFitting.*;
import thermo.system.*;
/**
 *
 * @author  Even Solbraa
 * @version
 */
public class TestBinaryHVfitToActivity extends java.lang.Object implements Cloneable{
    
    /** Creates new TestAcentric */
    public TestBinaryHVfitToActivity() {
    }
    
    
    public static void main(String[] args){
        
        LevenbergMarquardt optim = new LevenbergMarquardt();
        ArrayList sampleList = new ArrayList();
        
        // inserting samples from database
        int numb=0;
        while(numb<20){
            numb++;
            BinaryHVparameterFitToActivityCoefficientFunction function = new  BinaryHVparameterFitToActivityCoefficientFunction();
            SystemInterface testSystem = new SystemSrkEos(293.0+numb*50.0, 1.01);
            testSystem.addComponent("CO2", numb/100.0);             // legger til komponenter til systemet
            testSystem.addComponent("MDEA",1.0);
            //testSystem.addComponent("water",10.0);
            //testSystem.createDatabase(true);
            // testSystem.chemicalReactionInit();
            testSystem.setMixingRule(4);
            testSystem.init(0);
            double parameterGuess[] ={320.0, -40.0, -5.89, 8.9,0.3}; // HV
            function.setInitialGuess(parameterGuess);
            double sample1[] = { numb/1000.0, testSystem.getTemperature()};
            double standardDeviation1[] = {1.0};
            SampleValue sample = new SampleValue(0.001, 1.0/1000.0, sample1, standardDeviation1);
            sample.setFunction(function);
            sample.setThermodynamicSystem(testSystem);
            sampleList.add(sample);
        }
        
        
        SampleSet sampleSet = new SampleSet(sampleList);
        optim.setSampleSet(sampleSet);
        
        // do simulations
        //optim.solve();
        //optim.runMonteCarloSimulation();
        optim.displayCurveFit();
        optim.writeToTextFile("c:/testFit.txt");
    }
}

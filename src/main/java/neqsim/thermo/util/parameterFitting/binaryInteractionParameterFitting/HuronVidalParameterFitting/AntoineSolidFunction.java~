/*
 * Test.java
 *
 * Created on 22. januar 2001, 22:59
 */

package thermo.util.parameterFitting.pureComponentParameterFitting.AntoineParameter;

import thermo.system.*;
import thermodynamicOperations.*;
import statistics.parameterFitting.nonLinearParameterFitting.*;

/**
 *
 * @author  Even Solbraa
 * @version
 */
public class AntoineSolidFunction extends LevenbergMarquardtFunction {
    
    /** Creates new Test */
    public AntoineSolidFunction() {
        params = new double[2];
    }
    
    public double calcValue(double[] dependentValues){
        system.init(0);
        try{
            thermoOps.freezingPointTemperatureFlash();
        }
        catch(Exception e){
            System.out.println(e.toString());
        }
        return system.getTemperature();
    }
    
    public void setFittingParams(int i, double value){
        params[i] = value;
        if(i==1){
            system.getPhases()[0].getComponents()[i].setAntoineASolid(value);
            system.getPhases()[1].getComponents()[i].setAntoineASolid(value);
            system.getPhases()[2].getComponents()[i].setAntoineASolid(value);
            system.getPhases()[3].getComponents()[i].setAntoineASolid(value);
        }
        if(i==0) {
            system.getPhases()[0].getComponents()[i].setAntoineBSolid(value);
            system.getPhases()[1].getComponents()[i].setAntoineBSolid(value);
            system.getPhases()[2].getComponents()[i].setAntoineBSolid(value);
            system.getPhases()[3].getComponents()[i].setAntoineBSolid(value);
        }
    }
}
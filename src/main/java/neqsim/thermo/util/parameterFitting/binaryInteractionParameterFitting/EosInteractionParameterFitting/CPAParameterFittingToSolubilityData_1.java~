/*
 * Test.java
 *
 * Created on 22. januar 2001, 22:59
 */

package thermo.util.parameterFitting.binaryInteractionParameterFitting.EosInteractionParameterFitting;

import thermo.system.*;
import thermodynamicOperations.*;
import statistics.parameterFitting.nonLinearParameterFitting.*;
import thermo.system.*;
import thermo.mixingRule.*;
import thermo.phase.*;

/**
 *
 * @author  Even Solbraa
 * @version
 */
public class CPAParameterFittingToSolubilityData extends LevenbergMarquardtFunction {
    
    /** Creates new Test */
    public CPAParameterFittingToSolubilityData() {
        params = new double[1];
    }
    
    
    public double calcValue(double[] dependentValues){
        thermoOps.TPflash();
        //System.out.println("x " + system.getPhases()[1].getComponents()[0].getx());
        return system.getPhases()[1].getComponents()[0].getx();
    }
    
    public double calcTrueValue(double val){
        return val;
    }
    
     public void setFittingParams(int i, double value){
        params[i] = value;
        ((PhaseEosInterface)system.getPhases()[0]).getMixingRule().setBinaryInteractionParameter(0,1, value);
        ((PhaseEosInterface)system.getPhases()[1]).getMixingRule().setBinaryInteractionParameter(0,1, value);
    }
}
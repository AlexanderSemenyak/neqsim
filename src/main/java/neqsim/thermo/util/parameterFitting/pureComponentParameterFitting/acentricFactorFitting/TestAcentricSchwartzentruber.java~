/*
 * TestAcentric.java
 *
 * Created on 23. januar 2001, 22:08
 */

package thermo.util.parameterFitting.pureComponentParameterFitting.acentricFactorFitting;

import statistics.parameterFitting.nonLinearParameterFitting.*;
import statistics.parameterFitting.*;
import thermo.system.*;
import java.sql.*;
import util.database.*;
import java.util.*;
/**
 *
 * @author  Even Solbraa
 * @version
 */
public class TestAcentricSchwartzentruber extends java.lang.Object {
    
    /** Creates new TestAcentric */
    public TestAcentricSchwartzentruber() {
    }
    
    
    public static void main(String[] args){
        
        LevenbergMarquardt optim = new LevenbergMarquardt();
        ArrayList sampleList = new ArrayList();
        
        // inserting samples from database
        NeqSimDataBase database = new NeqSimDataBase();
        //ResultSet dataSet =  database.getResultSet("NeqSimDataBase",  "SELECT * FROM PureComponentVapourPressures WHERE ComponentName='water' ORDER BY Reference,Temperature");
        //ResultSet dataSet =  database.getResultSet("NeqSimDataBase",  "SELECT * FROM PureComponentVapourPressures WHERE ComponentName='CO2' AND VapourPressure>5.099");
        ResultSet dataSet =  database.getResultSet("NeqSimDataBase",  "SELECT * FROM PureComponentVapourPressures WHERE ComponentName='MDEA' ORDER BY Reference,Temperature");
        //ResultSet dataSet =  database.getResultSet("NeqSimDataBase",  "SELECT * FROM PureComponentVapourPressures WHERE ComponentName='MEG' ORDER BY Reference,Temperature");
        
        try{
            System.out.println("adding....");
            while(dataSet.next()){
                AcentricFunctionScwartzentruber function = new  AcentricFunctionScwartzentruber();
                //double guess[] = {0.074038, -0.94538, -0.698759};     // water
                double guess[] = {0.5212918734, -1.1520807481, -0.0138898820};        // MDEA
                //double guess[] = {0.0245568959, -1.2607398014};          // CO2
                function.setInitialGuess(guess);
                
                SystemInterface testSystem = new SystemSrkSchwartzentruberEos(280, 0.101);
                //SystemInterface testSystem = new SystemSrkMathiasCopeman(280, 0.01);
                testSystem.addComponent(dataSet.getString("ComponentName"), 100.0);
                //testSystem.createDatabase(true);
                double sample1[] = {Double.parseDouble(dataSet.getString("Temperature"))};  // temperature
                double standardDeviation1[] = {0.1,0.1,0.1}; // std.dev temperature    // presure std.dev pressure
                double val = Math.log(Double.parseDouble(dataSet.getString("VapourPressure")));
                SampleValue sample = new SampleValue(val, val/100.0, sample1, standardDeviation1);
                sample.setFunction(function);
                sample.setReference(dataSet.getString("Reference"));
                sample.setThermodynamicSystem(testSystem);
                sampleList.add(sample);
            }
        }
        catch(Exception e){
            System.out.println("database error" + e);
        }
        
        SampleSet sampleSet = new SampleSet(sampleList);
        optim.setSampleSet(sampleSet);
        
        // do simulations
        optim.solve();
        //optim.runMonteCarloSimulation();
        optim.displayCurveFit();
        optim.writeToCdfFile("c:/testFit.nc");
        optim.writeToTextFile("c:/testFit.txt");
    }
}

/*
 * Test.java
 *
 * Created on 22. januar 2001, 22:59
 */

package thermo.util.parameterFitting.pureComponentParameterFitting.acentricFactorFitting;

import thermo.system.*;
import thermodynamicOperations.*;
import statistics.parameterFitting.nonLinearParameterFitting.*;

/**
 *
 * @author  Even Solbraa
 * @version
 */
public class AcentricFunctionScwartzentruber extends LevenbergMarquardtFunction {
    
    /** Creates new Test */
    public AcentricFunctionScwartzentruber() {
       // params = new double[3];
    }
    
    public double calcValue(double[] dependentValues){
        // System.out.println("dep " + dependentValues[0]);
        system.setTemperature(dependentValues[0]);
        system.setPressure(system.getPhases()[0].getComponents()[0].getAntoineVaporPressure(dependentValues[0]));
        //   System.out.println("antoine pres: " + system.getPressure());
        system.init(0);
        system.init(1);
        thermoOps.bubblePointPressureFlash(false);
        return Math.log(system.getPressure());
    }
    
    public double calcTrueValue(double val){
        return Math.exp(val);
    }
    
    public void setFittingParams(int i, double value){
        params[i] = value;
        system.getPhases()[0].getComponents()[0].setSchwartzentruberParams(i, value);
        system.getPhases()[1].getComponents()[0].setSchwartzentruberParams(i, value);
        system.getPhases()[0].getComponents()[0].getAtractiveTerm().setParameters(i, value);
        system.getPhases()[1].getComponents()[0].getAtractiveTerm().setParameters(i, value);
    }
}
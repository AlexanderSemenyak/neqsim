/*
 * PhaseEos.java
 *
 * Created on 3. juni 2000, 14:38
 */

package thermo.phase;

import thermo.component.*;
/**
 *
 * @author  Even Solbraa
 * @version
 */
abstract class DefaultPhase extends Phase{
    
    ComponentInterface defComponent = null;
    
    /** Creates new PhaseEos */
    public DefaultPhase() {
        
    }
    public DefaultPhase(ComponentInterface comp){
        super();
        defComponent = comp;
    }
    
    public void setComponentType(ComponentInterface comp){
        defComponent = comp;
    }
    
    public void addcomponent(String componentName, double moles, double molesInPhase, int compNumber){
        super.addcomponent(moles);
        try{
            componentArray[compNumber] = (ComponentInterface) defComponent.getClass().newInstance();
        }
        catch(Exception e){
            System.err.println("err " + e.toString());
        }
        componentArray[compNumber].createComponent(componentName, moles, molesInPhase, compNumber);
    }
    
    
    
    public void init(double totalNumberOfMoles, int numberOfComponents, int type, int phase, double beta){ // type = 0 start init type =1 gi nye betingelser
        super.init(totalNumberOfMoles, numberOfComponents, type, phase, beta);
        return;
    }
    
    public double getMolarVolume(){
        return 1.0;
    }
}
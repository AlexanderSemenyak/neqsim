/*
 * PhaseSrkEos.java
 *
 * Created on 3. juni 2000, 14:38
 */

package thermo.phase;

import thermo.component.*;
import thermo.mixingRule.*;
/**
 *
 * @author  Even Solbraa
 * @version
 */
public class PhaseSrkCPAs extends PhaseSrkCPA{
    
   
    /** Creates new PhaseSrkEos */
    public PhaseSrkCPAs(){
        super();
        //cpamix = cpaSelect.getMixingRule(2);
    }
    
      public void addcomponent(String componentName, double moles,double molesInPhase, int compNumber){
        super.addcomponent(componentName,moles,molesInPhase,compNumber);
        componentArray[compNumber] = new ComponentSrkCPAs(componentName, moles, molesInPhase, compNumber);
    }
    
    public Object clone(){
        PhaseSrkCPAs clonedPhase = null;
        try{
            clonedPhase = (PhaseSrkCPAs) super.clone();
        }
        catch(Exception e){
            e.printStackTrace(System.err);
        }
        return clonedPhase;
    }
    
    
    public double calc_lngV(){
        double x = 1.9/4.0*getB()/getTotalVolume();
        double gv = (x/getTotalVolume())/(1.0-x);//;//-2.0*getB()*(10.0*getTotalVolume()-getB())/getTotalVolume()/((8.0*getTotalVolume()-getB())*(4.0*getTotalVolume()-getB()));
        return -gv;
    }
    
    public double calc_lngVV(){
        double gvv =0.225625/Math.pow(1.0-0.475*getB()/getTotalVolume(),2.0)*Math.pow(getB(),2.0)/(Math.pow(getTotalVolume(),4))+0.95/(1.0-0.475*getB()/getTotalVolume())*getB()/(Math.pow(getTotalVolume(),3));
        return gvv;
    }
    
    public double calc_lngVVV(){
        double gvv =-0.21434375/Math.pow(1.0-0.475*getB()/getTotalVolume(),3.0)*Math.pow(getB(),3.0)/(Math.pow(getTotalVolume(),6))-0.135375E1/Math.pow(1.0-0.475*getB()/getTotalVolume(),2.0)*Math.pow(getB(),2.0)/(Math.pow(getTotalVolume(),5))-0.285E1/(1.0
        -0.475*getB()/getTotalVolume())*getB()/(Math.pow(getTotalVolume(),4));
        return gvv;
    }

}
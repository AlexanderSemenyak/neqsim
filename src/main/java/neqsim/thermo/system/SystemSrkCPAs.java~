/*
 * System_SRK_EOS.java
 *
 * Created on 8. april 2000, 23:05
 */

package thermo.system;

import thermo.phase.*;
/**
 *
 * @author  Even Solbraa
 * @version
 */

/** This class defines a thermodynamic system using the SRK equation of state
 */
public class SystemSrkCPAs extends SystemSrkCPA {
    /** Creates a thermodynamic system using the SRK equation of state. */
    protected String modelName = "CPAs-SRK-EOS";
    //  SystemSrkEos clonedSystem;
    public SystemSrkCPAs(){
        super();
    }
    
    public SystemSrkCPAs(double T, double P) {
        super(T,P);
        for (int i=0;i<numberOfPhases;i++){
            phaseArray[i] = new PhaseSrkCPAs();
            phaseArray[i].setTemperature(T);
            phaseArray[i].setPressure(P);
        }
        this.useVolumeCorrection(false);
    }
    
    public SystemSrkCPAs(double T, double P, boolean solidCheck) {
        super(T, P, solidCheck);
        for (int i=0;i<numberOfPhases;i++){
            phaseArray[i] = new PhaseSrkCPAs();
            phaseArray[i].setTemperature(T);
            phaseArray[i].setPressure(P);
        }
        this.useVolumeCorrection(false);
        
        
        if(solidPhaseCheck){
            //System.out.println("here first");
            phaseArray[numberOfPhases-1] = new PhasePureComponentSolid();
            phaseArray[numberOfPhases-1].setTemperature(T);
            phaseArray[numberOfPhases-1].setPressure(P);
            phaseArray[numberOfPhases-1].setRefPhase(phaseArray[1].getRefPhase());
        }
        
        if(hydrateCheck){
            //System.out.println("here first");
            phaseArray[numberOfPhases-1] = new PhaseHydrate();
            phaseArray[numberOfPhases-1].setTemperature(T);
            phaseArray[numberOfPhases-1].setPressure(P);
            phaseArray[numberOfPhases-1].setRefPhase(phaseArray[1].getRefPhase());
        }
    }
    
    public Object clone(){
        SystemSrkCPAs clonedSystem = null;
        try{
            clonedSystem = (SystemSrkCPAs) super.clone();
        }
        catch(Exception e) {
            e.printStackTrace(System.err);
        }
        
        
        //        for(int i = 0; i < numberOfPhases; i++) {
        //            clonedSystem.phaseArray[i] = (PhaseInterface) phaseArray[i].clone();
        //        }
        //
        return clonedSystem;
    }
    
    
}
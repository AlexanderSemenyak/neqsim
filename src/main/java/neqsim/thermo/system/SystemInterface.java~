package thermo.system;

import thermo.component.*;

import physicalProperties.interfaceProperties.*;
import thermo.phase.*;
import chemicalReactions.*;
/*
 * Component_Interface.java
 *
 * Created on 8. april 2000, 21:35
 */


public interface SystemInterface extends Cloneable {
    public void addComponent(String comp, double moles);
    public void addComponent(String componentName, double moles, int phaseNumber);
    public void addComponent(String componentName, double value, String name, int phase);
    public void addComponent(String componentName, double value, String name);
    public void addSalt(String componentName, double value);
    public void init(int number);
    public java.lang.String getMixingRuleName();
    public java.lang.String getModelName();
    public boolean characterize();
    public void addComponent(String componentName, double moles, double TC, double PC, double acs);
    public boolean addPlusFraction(int start, int end);
    public double getBeta(int phase);
    public void save(String name);
    public void removeComponent(String name);
    public void normalizeBeta();
    public int getPhaseIndex(int index);
    public void setInitType(int initType);
    public void checkStability(boolean val);
    public boolean checkStability();
    public int getInitType();
    public double getCorrectedVolume();
    public void calcKIJ(boolean ok);
    public void write(String name, String filename, boolean newfile);
    public void useVolumeCorrection(boolean volcor);
    public void setMixingRule(String typename);
    public boolean isNumericDerivatives();
    public void setNumericDerivatives(boolean numericDerivatives);
    public void init();
    public java.lang.String getFluidInfo();
    public void setFluidInfo(java.lang.String info);
    public void setPhaseIndex(int index, int phaseIndex);
    public void setPhase(PhaseInterface phase, int numb);
    public void createDatabase(boolean reset);
    public void resetDatabase();
    public void setSolidPhaseCheck(boolean test);
    public boolean doSolidPhaseCheck();
    public boolean doMultiPhaseCheck();
    public void setMultiPhaseCheck(boolean test);
    public void init(int number, int phase);
    public void initNumeric();
    public void display();
    public void display(String name);
    public boolean doHydrateCheck();
    public void setHydrateCheck(boolean hydrateCheck);
    public double calcBeta() throws util.exception.IsNaNException, util.exception.TooManyIterationsException;
    public void setAllComponentsInPhase(int phase);
    public void initTotalNumberOfMoles(double change);
    public thermo.characterization.TBPCharacterize getCharacterization();
    public void calc_x_y();
    public PhaseInterface getPhase(int i);
    public void reset_x_y();
    public void isChemicalSystem(boolean temp);
    public void addComponent(int index, double moles, int phaseNumber);
    public void addPhase();
    public void setAtractiveTerm(int i);
    public void setBeta(int phase, double b);
    public void removePhase(int specPhase);
    public SystemInterface phaseToSystem(PhaseInterface newPhase);
    public void setTemperature(double temp);
    public void setTemperature(double newTemperature, int phaseNumber);
    //    public void setPressure(double newPressure, int phaseNumber);
    public void setPressure(double pres);
    public double getPressure();
    public void reInitPhaseType();
    public void setPhysicalPropertyModel(int type);
    public void clearAll();
    public double getPressure(int phaseNumber);
    public double getDensity();
    public double getVolume();
    public ChemicalReactionOperations getChemicalReactionOperations();
    public boolean isChemicalSystem();
    public double getMolarVolume();
    public double getMolarMass();
    public double getEnthalpy();
    public void calcInterfaceProperties();
    public InterphasePropertiesInterface getInterphaseProperties();
    public double initBeta();
    public void init_x_y();
    public double getEntropy();
    public double getTemperature();
    public double getTemperature(int phaseNumber);
    public double getBeta();
    public void chemicalReactionInit();
    public void initPhysicalProperties();
    public void setBeta(double b);
    //    public double getdfugdt(int i, int j);
    public void setPhaseType(int phaseToChange, int newPhaseType);
    public void setNumberOfPhases(int number);
    public double getTC();
    public double getPC();
    public void setTC(double TC);
    public void  setPC(double PC);
    public PhaseInterface[] getPhases();
    public int getNumberOfPhases();
    public double getGibbsEnergy();
    public double getInternalEnergy();
    public double getHelmholtzEnergy();
    public double getNumberOfMoles();
    public Object clone();
    public void setMixingRule(int type);
    public String[] getComponentNames();
    public double getdVdPtn();
    public double getdVdTpn();
    public double getCp();
    public void replacePhase(int repPhase, PhaseInterface newPhase);
    public PhaseInterface getGasPhase();
    public PhaseInterface getLiquidPhase();
    public double getZ();
    public double getViscosity();
    public double getConductivity();
    public double getKinematicViscosity();
    public void initRefPhases();
    public java.lang.String getFluidName();
    public void setFluidName(java.lang.String fluidName);
}

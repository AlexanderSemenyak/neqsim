/*
 * ComponentGE.java
 *
 * Created on 10. juli 2000, 21:05
 */

package thermo.component;

import thermo.phase.*;

/**
 *
 * @author  Even Solbraa
 * @version
 */
abstract class ComponentGE extends Component implements ComponentGEInterface{
    
    protected double gamma;
    protected double lngamma=0, dlngammadt=0;
    protected double[] dlngammadn;
    /** Creates new ComponentGE */
    public ComponentGE() {
    }
    
    public ComponentGE(String component_name, double moles,  double molesInPhase, int compnumber){
        super(component_name, moles, molesInPhase, compnumber);
    }
    
    public double getGamma(){
        return gamma;
    }
    
    public double fugcoef(PhaseInterface phase) {
          double temperature = phase.getTemperature(), pressure=phase.getPressure();
        int numberOfComponents = phase.getNumberOfComponents();
        //System.out.println("fug coef " + gamma*getAntoineVaporPressure(temperature)/pressure);
        fugasityCoeffisient = gamma*getAntoineVaporPressure(temperature)/pressure;
        logFugasityCoeffisient = Math.log(fugasityCoeffisient);
        return gamma*getAntoineVaporPressure(temperature)/pressure;
    }
    
    public double fugcoefDiffPres(PhaseInterface phase){
          double temperature = phase.getTemperature(), pressure=phase.getPressure();
        int numberOfComponents = phase.getNumberOfComponents();
        dfugdp=0.0; // foreløpig uten pointing
        return dfugdp;
    }
    
    public double fugcoefDiffTemp(PhaseInterface phase){
          double temperature = phase.getTemperature(), pressure=phase.getPressure();
        int numberOfComponents = phase.getNumberOfComponents();
        dfugdt=dlngammadt+getLogAntoineVaporPressuredT(temperature);
        System.out.println("sjekk denne dfug dt - antoine");
        return dfugdt;
    }
    
    
    
    
}
/*
 * Component_Interface.java
 *
 * Created on 8. april 2000, 23:15
 */

package thermo.component;

import thermo.phase.*;
import thermo.atomElement.*;
import thermo.component.atractiveEosTerm.*;


/**
 *
 * @author  Even Solbraa
 * @version
 *
 */
public interface ComponentInterface {
    public void createComponent(String component_name, double moles,  double molesInPhase, int compnumber);
    public double getHeatOfFusion();
    public void seta(double a);
    public void setComponentName(java.lang.String componentName);
    public double getSphericalCoreRadius();
    public void setb(double b);
    public int getNumberOfAssociationSites();
    public double getRate(String unitName);
    public double fugcoef(PhaseInterface phase);
    public double logfugcoefdT(PhaseInterface phase);
    public void setStokesCationicDiameter(double stokesCationicDiameter);
    public double logfugcoefdP(PhaseInterface phase);
    public double[] logfugcoefdN(PhaseInterface phase);
    public double getTripplePointDensity();
    public void setFugacityCoefficient(double val);
    public boolean calcActivity();
    public double getFugasityCoefficient();
    public void setLennardJonesMolecularDiameter(double lennardJonesMolecularDiameter);
    public void setLennardJonesEnergyParameter(double lennardJonesEnergyParameter);
    public void setSphericalCoreRadius(double sphericalCoreRadius);
    public double getTriplePointPressure();
    public double getTriplePointTemperature();
    public double getMeltingPointTemperature();
    public double getIdealGasEnthalpyOfFormation();
    public void addMolesChemReac(double dn, double totdn);
    public double getIdealGasGibsEnergyOfFormation();
    public void setTC(double val);
    public void setPC(double val);
    public double getDiElectricConstantdTdT(double temperature);
    public double getIdealGasAbsoluteEntropy();
    public double getDiElectricConstantdT(double temperature);
    public void init(double temperature, double pressure, double totalNumberOfMoles,double beta, int type);
    public void Finit(PhaseInterface phase, double temperature, double pressure, double totalNumberOfMoles,double beta, int numberOfComponents, int type);
    public double getx();
    public double getz();
    public double getK();
    public double getTC();
    public double getNormalBoilingPoint();
    public void setNormalBoilingPoint(double normalBoilingPoint);
    public double getPC();
    public void setComponentNumber(int numb);
    public void setViscosityAssociationFactor(double val);
    public int getIndex();
    public String getReferenceStateType();
    public String getElectrolyteInteractionType();
    public void setLiquidConductivityParameter(double number, int i);
    public double getLiquidConductivityParameter(int i);
    public double getNormalLiquidDensity();
    public String getComponentName();
    public int getComponentNumber();
    public void addMolesChemReac(double dn);
    public double getHeatOfVapourization(double temp);
    public double getNumberOfmoles();
    public void addMoles(double dn);
    public double getGibbsEnergyOfFormation();
    public double getReferencePotential();
    public double getLogFugasityCoeffisient();
    public void setReferencePotential(double ref);
    public double getNumberOfMolesInPhase();
    public void setNumberOfMolesInPhase(double moles);
    public void setx(double newx);
    public void setz(double newz);
    public void setK(double newK);
    public double getDiElectricConstant(double temperature);
    public double getIonicCharge();
    public double getdfugdt();
    public double getdfugdp();
    public double getSolidVaporPressure(double temperature);
    public double getCp0(double temperature);
    public double getCv0(double temperature);
    public double getEnthalpy(double temperature);
    public double getMolarMass();
    public double getLennardJonesMolecularDiameter();
    public double getLennardJonesEnergyParameter();
    public double getEntropy(double temperature, double pressure);
    public double getdfugdx(int i);
    public double getdfugdn(int i);
    public double getHresTP(double temperature);
    public double getGresTP(double temperature);
    public double getSresTP(double temperature);
    public double getFugasityCoeffisient();
    public double getAcentricFactor();
    public void setAtractiveTerm(int i);
    public AtractiveTermInterface getAtractiveTerm();
    public void setNumberOfmoles(double newmoles);
    public double getAntoineVaporPressure(double temp);
    public double getAntoineVaporTemperature(double pres);
    //    public double fugcoef(PhaseInterface phase, int numberOfComponents, double temperature, double pressure);
    //    public double fugcoefDiffTemp(PhaseInterface phase, int numberOfComponents, double temperature, double pressure);
    //    public double fugcoefDiffPres(PhaseInterface phase, int numberOfComponents, double temperature, double pressure);
    //    public double[] fugcoefDiffN(PhaseInterface phase, int numberOfComponents, double temperature, double pressure);
    public double getGibbsEnergy(double temperature, double pressure);
    public Object clone();
    public double getDebyeDipoleMoment();
    public double getViscosityCorrectionFactor();
    public double getCriticalVolume();
    public double getRacketZ();
    public String getName();
    public double getLiquidViscosityParameter(int i);
    public int getLiquidViscosityModel();
    public void setAcentricFactor(double val);
    public double getVolumeCorrection();
    public void setRacketZ(double val);
    public void setLiquidViscosityModel(int modelNumber);
    public void setLiquidViscosityParameter(double number, int i);
    public Element getElements();
    public double[] getSchwartzentruberParams();
    public void setSchwartzentruberParams(int i, double param);
    public double getParachorParameter();
    public void setParachorParameter(double parachorParameter);
    public double getPureComponentSolidDensity(double temperature);
    public double getPureComponentLiquidDensity(double temperature);
    public double getPureComponentHeatOfVaporization(double temperature);
    public double fugcoefDiffPresNumeric(PhaseInterface phase, int numberOfComponents, double temperature, double pressure);
    public double fugcoefDiffTempNumeric(PhaseInterface phase, int numberOfComponents, double temperature, double pressure);
    public void setdfugdt(double val);
    public void setdfugdp(double val);
    public void setdfugdn(int i, double val);
    public void setdfugdx(int i, double val);
    public boolean doElectrolyteInteractionCalc();
    public double getPaulingAnionicDiameter();
    public double getStokesCationicDiameter();
    public int getAtractiveTermNumber();
    public double getVoli();
    public double getLogAntoineVaporPressuredT(double temp);
    public double[] getMatiascopemanParams();
    public void setMatiascopemanParams(int index, double matiascopemanParams);
    public void setMatiascopemanParams(double[] matiascopemanParams);
    public double getAssociationVolume();
    public void setAssociationVolume(double associationVolume);
    public double getAssociationEnergy();
    public void setAssociationEnergy(double associationEnergy);
    public double getAntoineASolid();
    public void setAntoineASolid(double AntoineASolid);
    public double getAntoineBSolid();
    public void setAntoineBSolid(double AntoineBSolid);
}












/*
 * bubblePointFlash.java
 *
 * Created on 14. oktober 2000, 16:30
 */

package thermodynamicOperations.flashOps.saturationOps;


import thermodynamicOperations.*;
import thermo.system.*;

public class bubblePointPressureFlashReactive extends constantDutyTemperatureFlash{
    
    /** Creates new bubblePointFlash */
    public bubblePointPressureFlashReactive() {
    }
    
    public bubblePointPressureFlashReactive(SystemInterface system) {
        super(system);
    }
    
    
    public void run() throws Exception{
        
        int iterations=0, maxNumberOfIterations = 10;
        double yold=0, ytotal=1;
        double deriv=0, funk=0;
        //System.out.println("starting");
        //system.init(0);
        
        double oldPres=0;
        
        if(system.isChemicalSystem()){
            //  system.getChemicalReactionOperations().solveChemEq(0);
        }
        
        for (int i=0;i<system.getPhases()[1].getNumberOfComponents();i++){
            system.getPhase(0).getComponent(i).setx(1e-20);
        }
        
        system.getPhases()[0].getComponents()[0].setx(1.0);
        system.getPhases()[0].normalize();
        system.init(1);
        system.initBeta();
        
        do{
            iterations++;
            if(system.isChemicalSystem()){
                system.getChemicalReactionOperations().solveChemEq(1);
            }
            system.init(1);
            oldPres = system.getPressure();
            double fugliq = (system.getPhases()[1].getComponents()[0].getFugasityCoeffisient()*system.getPhases()[1].getComponents()[0].getx()*system.getPressure());
            double fuggas = (system.getPhases()[0].getComponents()[0].getFugasityCoeffisient()*system.getPhases()[0].getComponents()[0].getx()*system.getPressure());
            
            double diff = (fugliq-fuggas);
            //            System.out.println("fug liq " + fugliq);
            //            System.out.println("fug gas " + fuggas);
            //System.out.println("pres " + system.getPressure());
            system.setPressure(system.getPressure() + diff);
            
        }
        while(Math.abs(oldPres-system.getPressure())/oldPres>1e-6 && (iterations < maxNumberOfIterations));
        System.out.println("pres " + system.getPressure() + "  iter " + iterations);
    }
    
    public void printToFile(String name) {}
    
    
    
}

/*
 * bubblePointFlash.java
 *
 * Created on 14. oktober 2000, 16:30
 */

package thermodynamicOperations.flashOps.saturationOps;


import thermodynamicOperations.*;
import thermo.system.*;

public class bubblePointPressureFlash extends constantDutyTemperatureFlash{
    
    /** Creates new bubblePointFlash */
    public bubblePointPressureFlash() {
    }
    
    public bubblePointPressureFlash(SystemInterface system) {
        super(system);
    }
    
    public void run() {
        if(system.getPhase(0).getNumberOfComponents()==1 && system.getTemperature()>system.getPhase(0).getComponent(0).getTC()) setSuperCritical(true);
        
        int iterations=0, maxNumberOfIterations = 100;
        double yold=0, ytotal=1;
        double deriv=0, funk=0;
        boolean chemSolved = true;
        //System.out.println("starting");
        
        system.init(0);
        system.setBeta(1, 1.0-1e-10);
        system.setBeta(0, 1e-10);
        
        double oldPres=0;
        if(system.isChemicalSystem()){
           // system.getChemicalReactionOperations().solveChemEq(0);
        }
        
        for (int i=0;i<system.getPhases()[1].getNumberOfComponents();i++){
            system.getPhases()[1].getComponents()[i].setx(system.getPhases()[0].getComponents()[i].getz());
            if(system.getPhases()[0].getComponents()[i].getIonicCharge()!=0) system.getPhases()[0].getComponents()[i].setx(1e-40);
            else system.getPhases()[0].getComponents()[i].setx(system.getPhases()[0].getComponents()[i].getK()*system.getPhases()[1].getComponents()[i].getz());
        }
        ytotal = 0.0;
        for (int i=0;i<system.getPhases()[0].getNumberOfComponents();i++){
            ytotal += system.getPhases()[0].getComponents()[i].getx();
        }
        double ktot=0.0;
        do{
            iterations++;
            for (int i=0;i<system.getPhases()[0].getNumberOfComponents();i++){
                system.getPhases()[0].getComponents()[i].setx(system.getPhases()[0].getComponents()[i].getx()/ytotal);
            }
            system.init(1);
            
            if(system.isChemicalSystem()){// && (iterations%3)==0 && iterations<50){
                chemSolved = system.getChemicalReactionOperations().solveChemEq(1);
            }
            oldPres =  system.getPressure();
            ktot = 0.0;
            for (int i=0;i<system.getPhases()[1].getNumberOfComponents();i++){
                do{
                    yold = system.getPhases()[0].getComponents()[i].getx();
                    if(system.getPhase(0).getComponent(i).getIonicCharge()!=0) system.getPhases()[0].getComponents()[i].setK(1e-40);
                    else system.getPhases()[0].getComponents()[i].setK(Math.exp(Math.log(system.getPhases()[1].getComponents()[i].getFugasityCoeffisient()) - Math.log(system.getPhases()[0].getComponents()[i].getFugasityCoeffisient())));
                    system.getPhases()[1].getComponents()[i].setK(system.getPhases()[0].getComponents()[i].getK());
                    system.getPhases()[0].getComponents()[i].setx(system.getPhases()[0].getComponents()[i].getK()*system.getPhases()[1].getComponents()[i].getz());
                    //System.out.println("y err " + Math.abs(system.getPhases()[0].getComponents()[i].getx()-yold));
                }
                while(Math.abs(system.getPhases()[0].getComponents()[i].getx()-yold)>1e-5);
                ktot += Math.abs(system.getPhases()[1].getComponents()[i].getK()-1.0);
            }
            
            //System.out.println("ytot " + ytotal);
            for (int i=0;i<system.getPhases()[0].getNumberOfComponents();i++){
                if(!Double.isNaN(system.getPhases()[0].getComponents()[i].getK())) system.getPhases()[0].getComponents()[i].setx(system.getPhases()[0].getComponents()[i].getK()*system.getPhases()[1].getComponents()[i].getz());
                else{
                    system.init(0);
                    System.out.println("k err. : nan" );
                }
            }
            ytotal = 0.0;
            for (int i=0;i<system.getPhases()[0].getNumberOfComponents();i++){
                ytotal += system.getPhases()[0].getComponents()[i].getx();
            }
            if(ytotal>5.0) ytotal=5.0;
            if(ytotal<0.5) ytotal=0.5;
            system.setPressure(system.getPressure()*ytotal);// + 0.5*(ytotal*system.getPressure()-system.getPressure()));
        }
        while((((Math.abs(ytotal-1.0)) > 1e-6) || Math.abs(oldPres-system.getPressure())/oldPres>1e-6) && (iterations < maxNumberOfIterations) || !chemSolved || iterations<5);
        System.out.println("iter in bub calc " + iterations + " pres " + system.getPressure());
//        System.out.println("iter " + iterations + " XTOT " +ytotal + " ktot " +ktot);
        system.init(1);
        if(Math.abs(ytotal-1.0)>1e-4 || ktot<1e-3 && system.getPhase(0).getNumberOfComponents()>1){
            System.out.println("ytot " + Math.abs(ytotal-1.0));
            setSuperCritical(true);
        }
    }
    
    public void printToFile(String name) {}
    
    
    
}

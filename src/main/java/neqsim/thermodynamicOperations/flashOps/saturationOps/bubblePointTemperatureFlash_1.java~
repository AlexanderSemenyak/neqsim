/*
 * bubblePointFlash.java
 *
 * Created on 14. oktober 2000, 16:30
 */

package thermodynamicOperations.flashOps.saturationOps;


import thermodynamicOperations.*;
import thermo.system.*;

public class bubblePointTemperatureFlash extends constantDutyTemperatureFlash{
    
    /** Creates new bubblePointFlash */
    public bubblePointTemperatureFlash() {
    }
    
    public bubblePointTemperatureFlash(SystemInterface system) {
        super(system);
    }
    
    
    public void run(){
        
        int iterations=0, maxNumberOfIterations = 10000;
        double yold=0, ytotal=1;
        double deriv=0, funk=0;
        
        for (int i=0;i<system.getPhases()[1].getNumberOfComponents();i++){
            system.getPhases()[1].getComponents()[i].setx(system.getPhases()[0].getComponents()[i].getz());
            system.getPhases()[0].getComponents()[i].setx(system.getPhases()[0].getComponents()[i].getK()*system.getPhases()[1].getComponents()[i].getx());
        }
        do {
            // system.setTemperature((system.getTemperature()*9+system.getTemperature()/ytotal)/10);
            //   System.out.println("temp . " + system.getTemperature());
            funk = 0;
            deriv =0;
            ytotal=0;
            system.init(3);
            for (int i=0;i<system.getPhases()[1].getNumberOfComponents();i++){
                
                do {
                    iterations++;
                    
                    yold = system.getPhases()[0].getComponents()[i].getx();
                    system.getPhases()[0].getComponents()[i].setK(system.getPhases()[1].getComponents()[i].getFugasityCoeffisient()/ system.getPhases()[0].getComponents()[i].getFugasityCoeffisient());
                    system.getPhases()[1].getComponents()[i].setK(system.getPhases()[0].getComponents()[i].getK());
                    system.getPhases()[0].getComponents()[i].setx(system.getPhases()[1].getComponents()[i].getx()*system.getPhases()[1].getComponents()[i].getFugasityCoeffisient()/ system.getPhases()[0].getComponents()[i].getFugasityCoeffisient());
                    
                }
                while((Math.abs(yold-system.getPhases()[1].getComponents()[i].getx()) > 1e-10) && (iterations < maxNumberOfIterations));
                
                ytotal = ytotal+system.getPhases()[0].getComponents()[i].getx();
                funk = funk + system.getPhases()[1].getComponents()[i].getx()*system.getPhases()[1].getComponents()[i].getK();
                deriv=deriv+system.getPhases()[1].getComponents()[i].getx()*system.getPhases()[1].getComponents()[i].getK()*(system.getPhases()[1].getComponents()[i].getdfugdt()-system.getPhases()[0].getComponents()[i].getdfugdt());
            }
            
            //  System.out.println("FUNK: " + funk);
            // System.out.println("temp: " + system.getTemperature());
            // system.setPressure(-Math.log(funk)/(deriv/funk)+system.getPressure());
            system.setTemperature(-(funk-1)/deriv+system.getTemperature());
            
        }
        while((Math.abs(ytotal-1) > 1e-10)&& (iterations < maxNumberOfIterations));
        
    }
    
    public void printToFile(String name) {}
    
    
    
}

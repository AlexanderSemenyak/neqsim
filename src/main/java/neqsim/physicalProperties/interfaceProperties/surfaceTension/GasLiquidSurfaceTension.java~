/*
 * GasLiquidSurfaceTension.java
 *
 * Created on 13. august 2001, 13:14
 */

package physicalProperties.interfaceProperties.surfaceTenison;
import thermo.system.*;
/**
 *
 * @author  esol
 * @version
 */
public class GasLiquidSurfaceTension extends SurfaceTension{
    
    /** Creates new GasLiquidSurfaceTension */
    public GasLiquidSurfaceTension() {
    }
    
    public GasLiquidSurfaceTension(SystemInterface system) {
        super(system);
    }
    
    /** Calculates the pure component surfacetension using the Macleod/Sugden method
     */
    public double calcPureComponentSurfaceTension(int componentNumber){
        return 1.0e-3*Math.pow(system.getPhases()[0].getComponents()[componentNumber].getParachorParameter()*
        1.0e-6*(system.getPhases()[1].getPhysicalProperties().getDensity()/system.getPhases()[1].getMolarMass()*system.getPhases()[1].getComponents()[componentNumber].getx() - system.getPhases()[0].getPhysicalProperties().getDensity()/system.getPhases()[0].getMolarMass()*system.getPhases()[0].getComponents()[componentNumber].getx()), 4.0);
    }
    
    /** Calculates the surfacetension using the Macleod/Sugden method for mixtures
     * Units:  N/m
     */
    public double calcSurfaceTension(){
        double temp=0;
        
        for(int i=0;i<system.getPhases()[0].getNumberOfComponents();i++){
            // System.out.println("vol " + 1.0e-6*system.getPhases()[1].getPhysicalProperties().getDensity()/system.getPhases()[1].getMolarMass());
            temp += system.getPhases()[0].getComponents()[i].getParachorParameter()*
            1.0e-6*(system.getPhases()[1].getPhysicalProperties().getDensity()/system.getPhases()[1].getMolarMass()*system.getPhases()[1].getComponents()[i].getx() - system.getPhases()[0].getPhysicalProperties().getDensity()/system.getPhases()[0].getMolarMass()*system.getPhases()[0].getComponents()[i].getx());
        }
        return Math.pow(temp, 4.0)/1000.0;
    }
}

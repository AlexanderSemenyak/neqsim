/*
 * RateUnit.java
 *
 * Created on 25. januar 2002, 20:22
 */

package util.unit;

/**
 *
 * @author  esol
 * @version 
 */
public class RateUnit extends util.unit.BaseUnit {

    double molarmass=0.0, stddens=0.0, boilp=0.0;
    /** Creates new RateUnit */
    public RateUnit(double value, String name, double molarmass, double stddens, double boilp) {
        super(value, name);
        this.molarmass = molarmass;
        this.stddens = stddens;
        this.boilp = boilp;
    }
    
    public double getSIvalue(){
        return getConversionFactor(inunit)/getConversionFactor("SI")*invalue;
    }
    
    public double getValue(String tounit){
        return getConversionFactor(inunit)/getConversionFactor(tounit)*invalue;
    }
    
    public double getConversionFactor(String name){
        double mol_m3 = 0.0 ;
        double mol_Sm3 = 101325.0/(8.314*standardStateTemperature);
        if(boilp<25) mol_m3 = 101325.0/(8.314*standardStateTemperature);
        else mol_m3 = 1.0/(molarmass)*stddens*1000;
        
        if(name.equals("mol/sec") || name.equals("SI")) factor = 1.0;
        else if(name.equals("Nlitre/min")) factor = 1.0/60.0 * mol_m3/1000.0;
        else if(name.equals("Nlitre/sec")) factor = mol_m3/1000.0;
        else if(name.equals("kg/sec")) factor = 1.0/(molarmass/1000.0);
        else if(name.equals("kg/min")) factor = 1.0/60.0*1.0/(molarmass);
        else if(name.equals("Sm^3/sec")) factor = mol_Sm3;
        else if(name.equals("Sm^3/min")) factor = 1.0/60.0 * mol_Sm3;
        else if(name.equals("MSm^3/day")) factor = 1.0e6 * mol_Sm3 / (3600.0*24.0);
        else System.out.println("can't convert unit");
        
        return factor;
    }

}

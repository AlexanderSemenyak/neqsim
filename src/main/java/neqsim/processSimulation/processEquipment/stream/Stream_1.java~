/*
 * Stream.java
 *
 * Created on 12. mars 2001, 13:11
 */

package processSimulation.processEquipment.stream;

import processSimulation.processEquipment.*;
import thermo.system.*;
import thermodynamicOperations.flashOps.*;
import java.util.*;
import thermodynamicOperations.*;
import javax.swing.*;
import javax.swing.event.*;
import java.awt.*;
import java.text.*;
/**
 *
 * @author  Even Solbraa
 * @version
 */
public class Stream extends Object implements ProcessEquipmentInterface, Cloneable{
    
    SystemInterface thermoSystem;
    ThermodynamicOperations thermoOps;
    int streamNumber=0;
    static int numberOfStreams=0;
    String name = new String();
    
    /** Creates new Stream */
    public Stream() {
    }
    
    public Stream(SystemInterface thermoSystem) {
        this.thermoSystem = thermoSystem;
        numberOfStreams++;
        streamNumber = numberOfStreams;
    }
    
    public Stream(String name, SystemInterface thermoSystem) {
        this.thermoSystem = thermoSystem;
        this.name = name;
        numberOfStreams++;
        streamNumber = numberOfStreams;
    }
    
    public void setName(String name){
        this.name = name;
    }
    
    public Object clone(){
        
        Stream clonedStream = null;
        
        try{
            clonedStream = (Stream) super.clone();
        }
        catch(Exception e)
        {
            e.printStackTrace(System.err);
        }
        
        thermoSystem = (SystemInterface) thermoSystem.clone();
        
        return clonedStream;
    }
    
    public void setThermoSystem(SystemInterface thermoSystem){
        this.thermoSystem = (SystemInterface) thermoSystem;
    }
    
    public SystemInterface getThermoSystem(){
        return this.thermoSystem;
    }
    
    public void run(){
        System.out.println("start flashing stream... " + streamNumber);
        thermoOps = new ThermodynamicOperations(thermoSystem);
        thermoOps.TPflash();
        System.out.println("number of phases: " + thermoSystem.getNumberOfPhases());
        System.out.println("beta: " + thermoSystem.getBeta());
    }
    
    public void displayResult(){
        
        DecimalFormat nf = new DecimalFormat();
        nf.setMaximumFractionDigits(5);
        nf.applyPattern("#.#####E0");
        
        
        JDialog dialog = new JDialog(new JFrame(), "Results from TPflash");
        Container dialogContentPane = dialog.getContentPane();
        dialogContentPane.setLayout(new FlowLayout());
        
        thermoSystem.initPhysicalProperties();
        String[][] table = new String[20][5];
        String[] names = {"", "Phase 1", "Phase 2", "Phase 3", "Unit"};
        table[0][0] = "";
        table[0][1] = "";
        table[0][2] = "";
        table[0][3] = "";
        StringBuffer buf = new StringBuffer();
        FieldPosition test = new FieldPosition(0);
        
        for(int i=0;i<thermoSystem.getNumberOfPhases();i++){
            for(int j=0;j<thermoSystem.getPhases()[0].getNumberOfComponents();j++){
                table[j+1][0] = thermoSystem.getPhases()[0].getComponents()[j].getName();
                buf = new StringBuffer();
                table[j+1][i+1] = nf.format(thermoSystem.getPhases()[i].getComponents()[j].getx(), buf, test).toString();
                table[j+1][4] = "[-]";
            }
            buf = new StringBuffer();
            table[thermoSystem.getPhases()[0].getNumberOfComponents()+2][0] = "Density";
            table[thermoSystem.getPhases()[0].getNumberOfComponents()+2][i+1] = nf.format(thermoSystem.getPhases()[i].getPhysicalProperties().getDensity(), buf, test).toString();
            table[thermoSystem.getPhases()[0].getNumberOfComponents()+2][4] = "[kg/m^3]";
            
            //  Double.longValue(thermoSystem.getPhases()[i].getBeta());
            
            buf = new StringBuffer();
            table[thermoSystem.getPhases()[0].getNumberOfComponents()+3][0] = "PhaseFraction";
            table[thermoSystem.getPhases()[0].getNumberOfComponents()+3][i+1] = nf.format(thermoSystem.getPhases()[i].getBeta(), buf, test).toString();
            table[thermoSystem.getPhases()[0].getNumberOfComponents()+3][4] = "[-]";
            
            buf = new StringBuffer();
            table[thermoSystem.getPhases()[0].getNumberOfComponents()+4][0] = "MolarMass";
            table[thermoSystem.getPhases()[0].getNumberOfComponents()+4][i+1] = nf.format(thermoSystem.getPhases()[i].getMolarMass()*1000, buf, test).toString();
            table[thermoSystem.getPhases()[0].getNumberOfComponents()+4][4] = "[kg/kmol]";
            
            buf = new StringBuffer();
            table[thermoSystem.getPhases()[0].getNumberOfComponents()+5][0] = "Cp";
            table[thermoSystem.getPhases()[0].getNumberOfComponents()+5][i+1] = nf.format((thermoSystem.getPhases()[i].getCp()/(thermoSystem.getPhases()[i].getNumberOfMolesInPhase() * thermoSystem.getPhases()[i].getMolarMass()*1000)), buf, test).toString();
            table[thermoSystem.getPhases()[0].getNumberOfComponents()+5][4] = "[kJ/kg*K]";
            
            buf = new StringBuffer();
            table[thermoSystem.getPhases()[0].getNumberOfComponents()+7][0] = "Viscosity";
            table[thermoSystem.getPhases()[0].getNumberOfComponents()+7][i+1] = nf.format((thermoSystem.getPhases()[i].getPhysicalProperties().getViscosity()), buf, test).toString();
            table[thermoSystem.getPhases()[0].getNumberOfComponents()+7][4] = "[kg/m*sec]";
            
            buf = new StringBuffer();
            table[thermoSystem.getPhases()[0].getNumberOfComponents()+8][0] = "Conductivity";
            table[thermoSystem.getPhases()[0].getNumberOfComponents()+8][i+1] = nf.format(thermoSystem.getPhases()[i].getPhysicalProperties().getConductivity(), buf, test).toString();
            table[thermoSystem.getPhases()[0].getNumberOfComponents()+8][4] = "[W/m*K]";
            
            buf = new StringBuffer();
            table[thermoSystem.getPhases()[0].getNumberOfComponents()+10][0] = "Pressure";
            table[thermoSystem.getPhases()[0].getNumberOfComponents()+10][i+1] = Double.toString(thermoSystem.getPhases()[i].getPressure());
            table[thermoSystem.getPhases()[0].getNumberOfComponents()+10][4] = "[bar]";
            
            buf = new StringBuffer();
            table[thermoSystem.getPhases()[0].getNumberOfComponents()+11][0] = "Temperature";
            table[thermoSystem.getPhases()[0].getNumberOfComponents()+11][i+1] = Double.toString(thermoSystem.getPhases()[i].getTemperature());
            table[thermoSystem.getPhases()[0].getNumberOfComponents()+11][4] = "[K]";Double.toString(thermoSystem.getPhases()[i].getTemperature());
            
            buf = new StringBuffer();
            table[thermoSystem.getPhases()[0].getNumberOfComponents()+13][0] = "Stream";
            table[thermoSystem.getPhases()[0].getNumberOfComponents()+13][i+1] = name;
            table[thermoSystem.getPhases()[0].getNumberOfComponents()+13][4] = "-";
        }
        
        JTable Jtab = new JTable(table,names);
        JScrollPane scrollpane = new JScrollPane(Jtab);
        dialogContentPane.add(scrollpane);
        dialog.pack();
        dialog.show();
    }
    
    
}

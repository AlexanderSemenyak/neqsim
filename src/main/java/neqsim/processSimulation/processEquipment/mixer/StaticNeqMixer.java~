/*
 * staticMixer.java
 *
 * Created on 11. mars 2001, 01:49
 */

package processSimulation.processEquipment.mixer;

import processSimulation.processEquipment.*;
import thermo.system.*;
import thermodynamicOperations.flashOps.*;
import java.util.*;
import thermodynamicOperations.*;
import processSimulation.processEquipment.stream.*;
/**
 *
 * @author  Even Solbraa
 * @version
 */
public class StaticNeqMixer extends StaticMixer implements ProcessEquipmentInterface, MixerInterface{
    
    
    /** Creates new staticMixer */
    public StaticNeqMixer() {
    }
    
    public StaticNeqMixer(String name) {
        super(name);
    }
    
    
    public void mixStream(){
        int index = 0;
        String compName = new String();
        
        for(int k=1;k<streams.size();k++){
            
            for(int i=0;i<((SystemInterface) ((Stream) streams.get(k)).getThermoSystem()).getPhases()[0].getNumberOfComponents();i++){
                
                boolean gotComponent=false;
                String componentName = ((SystemInterface) ((Stream) streams.get(k)).getThermoSystem()).getPhases()[0].getComponents()[i].getName();
                System.out.println("adding: " + componentName);
                int numberOfPhases= ((SystemInterface) ((Stream) streams.get(k)).getThermoSystem()).getNumberOfPhases();
                double[] moles = new double[numberOfPhases];
                // her må man egentlig sjekke at phase typen er den samme !!! antar at begge er to fase elle gass - tofase
                for(int p=0;p<numberOfPhases;p++){
                    moles[p] = ((SystemInterface) ((Stream) streams.get(k)).getThermoSystem()).getPhases()[p].getComponents()[i].getNumberOfMolesInPhase();
                }
                for(int p=0;p<mixedStream.getThermoSystem().getPhases()[0].getNumberOfComponents();p++){
                    if(mixedStream.getThermoSystem().getPhases()[0].getComponents()[p].getName().equals(componentName)){
                        gotComponent=true;
                        index = ((SystemInterface) ((Stream) streams.get(0)).getThermoSystem()).getPhases()[0].getComponents()[p].getComponentNumber();
                        compName = ((SystemInterface) ((Stream) streams.get(0)).getThermoSystem()).getPhases()[0].getComponents()[p].getComponentName();
                        
                    }
                }
                
                if(gotComponent){
                    System.out.println("adding moles starting....");
                    for(int p=0;p<numberOfPhases;p++){
                        mixedStream.getThermoSystem().addComponent(compName, moles[p], p);
                    }
                    System.out.println("adding moles finished");
                }
                else {
                    System.out.println("ikke gå hit");
                    for(int p=0;p<numberOfPhases;p++){
                        mixedStream.getThermoSystem().addComponent(compName, moles[p], p);
                    }
                }
            }
        }
        mixedStream.getThermoSystem().init_x_y();
        mixedStream.getThermoSystem().initBeta();
        mixedStream.getThermoSystem().init(2);
        
    }
    
    
    
    public void run(){
        double enthalpy = 0.0;
        for(int k=0;k<streams.size();k++){
            ((SystemInterface) ((Stream) streams.get(k)).getThermoSystem()).init(3);
            enthalpy += ((SystemInterface) ((Stream) streams.get(k)).getThermoSystem()).getEnthalpy();
        }
        
        mixedStream.setThermoSystem(((SystemInterface) ((Stream) streams.get(0)).getThermoSystem().clone()));
        mixedStream.getThermoSystem().setNumberOfPhases(2);
        mixedStream.getThermoSystem().reInitPhaseType();
        mixStream();
        
        SystemInterface syst = (SystemInterface) mixedStream.getThermoSystem().clone();
        syst.setTemperature(((SystemInterface) ((Stream) streams.get(0)).getThermoSystem()).getTemperature());
        syst.setPressure(((SystemInterface) ((Stream) streams.get(0)).getThermoSystem()).getPressure());
        testOps = new ThermodynamicOperations(syst);
        testOps.PHflash(enthalpy, 0);
        System.out.println("temp " + syst.getTemperature());
        mixedStream.getThermoSystem().setTemperature(syst.getTemperature());
        mixedStream.getThermoSystem().init(3);
        //        double enthalpy = calcMixStreamEnthalpy();
        //        System.out.println("temp guess " + guessTemperature());
        //        mixedStream.getThermoSystem().setTemperature(guessTemperature());
        //        testOps = new ThermodynamicOperations(mixedStream.getThermoSystem());
        //        testOps.TPflash();
        //        testOps.PHflash(enthalpy, 0);
        //        System.out.println("enthalpy: " + mixedStream.getThermoSystem().getEnthalpy());
        //        System.out.println("enthalpy: " + enthalpy);
        //        System.out.println("temperature: " + mixedStream.getThermoSystem().getTemperature());
    }
    
    public String getName() {
    }
    
}

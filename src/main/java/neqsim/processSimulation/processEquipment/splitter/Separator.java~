/*
 * Separator.java
 *
 * Created on 12. mars 2001, 19:48
 */

package processSimulation.processEquipment.separator;

import processSimulation.processEquipment.*;
import thermo.system.*;
import thermodynamicOperations.flashOps.*;
import java.util.*;
import thermodynamicOperations.*;
import javax.swing.*;
import javax.swing.event.*;
import java.awt.*;
import processSimulation.processEquipment.stream.*;
/**
 *
 * @author  Even Solbraa
 * @version
 */
public class Separator extends Object implements ProcessEquipmentInterface{
    
    SystemInterface thermoSystem, gasSystem, waterSystem, liquidSystem, thermoSystemCloned;
    ThermodynamicOperations thermoOps;
    Stream inletStream;
    Stream gasOutStream;
    Stream liquidOutStream;
    String name= new String();
    
    /** Creates new Separator */
    public Separator() {
    }
    
    public Separator(Stream inletStream) {
        this.setInletStream(inletStream);
    }
    
    public Separator(String name, Stream inletStream) {
        this.name = name;
        this.setInletStream(inletStream);
    }
    
    public void setName(String name){
        this.name = name;
    }
    
    public void setInletStream(Stream inletStream){
        this.inletStream = inletStream;
        
        thermoSystem = (SystemInterface) inletStream.getThermoSystem().clone();
        gasSystem = thermoSystem.phaseToSystem(thermoSystem.getPhases()[0]);
        gasOutStream = new Stream(gasSystem);
        
        thermoSystem = (SystemInterface) inletStream.getThermoSystem().clone();
        liquidSystem = thermoSystem.phaseToSystem(thermoSystem.getPhases()[1]);
        liquidOutStream = new Stream(liquidSystem);
    }
    
    
    public Stream getLiquidOutStream(){
        return liquidOutStream;
    }
    
    public Stream getGasOutStream(){
        return gasOutStream;
    }
    
    public void run(){
        thermoSystem = (SystemInterface) inletStream.getThermoSystem().clone();
        gasSystem = thermoSystem.phaseToSystem(thermoSystem.getPhases()[0]);
        gasSystem.setNumberOfPhases(1);
        gasOutStream.setThermoSystem(gasSystem);
        
        thermoSystem = (SystemInterface) inletStream.getThermoSystem().clone();
        liquidSystem = thermoSystem.phaseToSystem(thermoSystem.getPhases()[1]);
        liquidSystem.setNumberOfPhases(1);
        liquidOutStream.setThermoSystem(liquidSystem);
    }
    
    public void displayResult(){
    }
    
}
